//•	Какое будет выведено значение:     5
//let x = 5; alert( x++ );


//Чему равно такое выражение: NaN
//console.log([ ] + false - null);



//Что выведет этот код: присваиваем справа на лево.   будет выведено 2
// let y = 1; 
// let x = y = 2; alert(x);

//Чему равна сумма [ ] + 1 + 2?   12, т. к. тип данних string
// console.log(typeof([ ] + 1 + 2));

//Что выведет этот код: alert( "1"[0] )?        виведет 1, т.к. выводим индекс этой же строки
// alert( "1"[0] );


//Чему равно 2 && 1 && null && 0 && undefined ?       null, т.к. оператор идет слева направо, число дает
// true а вот первое значение null все делает false потому что оператор &&
// console.log(2 && 1 && null && 0 && undefined );


//Есть ли разница между выражениями? !!( a && b ) и (a && b)? усть разница, потому что !! превращают 
// значение в булиновое, и потом оно сравнивается с числовим
// И запинается на лжи
// ИЛИ запинается на правде
// console.log(!!( a && b ))
// console.log(a && b)

//Что выведет этот код: alert( null || 2 && 3 || 4 ); ? смотрим таблицу приоритетов операций
// И запинается на лжи
// ИЛИ запинается на правде
// null это значение false
//  вернется 3
// console.log(2 && 3);



//a = [1, 2, 3]; b = [1, 2, 3]; Правда ли что a == b ? нет, это разные массивы, просто ссовпало что одинаковые значения
// const a = [1, 2, 3]; 
// const b = [1, 2, 3];
// console.log(a == b);

//Что выведет этот код: alert( +"Infinity" ); ? Infinity тип данных number потому что спереди +
// alert( +"Infinity" );
// console.log(typeof(+"Infinity" ));

//Верно ли сравнение: "Ёжик" > "яблоко"? Нет, надо смотреть таблицу UNICODE

//Чему равно 0 || "" || 2 || undefined || true || falsе ?      2
// 0, ""    -  все это false
console.log(0 || "" || 2 || undefined || true || falsе);
